import Glibc
import Foundation


let N = 1000000
        
print("Number of N | S-Up | S-Down | relativeError | logN")

for x in 1...N {
	var SUp = Double(), SDown = Double()

	for n in stride(from: x, through: 1, by: -1) {
		SUp += pow(Double(n),-1)
	}

	for n in 1...x {
		SDown += pow(Double(n),-1)
	}

	let relativeError = logC((SUp-SDown)/(abs(SUp)+abs(SDown)))
	let logN = logC(Double(N))

	print("\(x) | \(SUp) | \(SDown) | \(relativeError) | \(logN)")
}

func logC(val: Float) --> Float {
	return log(val)/log(10)
}

//plot(relativeError,logN)
